import requests # импорт библиотеки для получения данных из интернета.
import json # импорт библиотеки для работы с данными формата json.
from tkinter import * # импорт библиотеки для работы с оконным интерфейсом.
from tkinter import messagebox as mb # отдельно оттуда же импортируется модуль для создания информационных окон
# с указанием сокращённого имени во имя удобства его вызова.
from tkinter import ttk # импорт библиотеки для создания классных виджетов


def exchange(): # создана функция для получения и вывода данных о курсе валют.
    code = combobox.get() # создана переменная, в которую при помощи функции get отправляется выбранный пользователем код валюты.

    if code: # если пользователь что-то ввёл:
        try: # проводится обработка исключений. Программа попробует обработать запрос.
            response = requests.get('https://open.er-api.com/v6/latest/USD') # создана переменная для помещения в неё данных из ссылки.
            response.raise_for_status() # проверка статуса ответа сайта. Если код 200 (всё в порядке), то:
            data = response.json() # создана переменная, в которую помещается ответ с сайта в формате json.
            if code in data['rates']: # Проверка наличия соответствующего кода валюты, введённого пользователем, в ответе сайта. Если порядок, то:
                exchange_rate = data['rates'][code] # создаётся переменная, в которую помещается значение ключа (курс,
                # присвоенный запрашиваемой валюте).
                c_name = cur[code] # создана переменная, берущая из словаря "cur" значение, соответствующее выбранному коду.
                mb.showinfo('Курс обмена',f'Курс: {exchange_rate:.2f} {c_name} за 1 доллар.') # Вывод информационного окна с результатом.
            else: # если же введённый пользователем код не будет найден в содержимом полученного ответа:
                mb.showerror('Ошибка!', f'Валюта {code} не найдена!') # программа об этом сообщит в информационном окне.
        except Exception as e: # применение универсальной обработки исключений
            mb.showerror('Ошибка!', f'Произошла ошибка: {e}.') # выведет в информационном окне сообщение о конкретной ошибке.
    else: # если пользователь ничего не ввёлЖ
        mb.showwarning('Внимание!', 'Введите код валюты!') # программа об этом сообщит в информационном окне.


def update_c_label(event): # создана функция, обеспечивающая работоспособность метки c_label. В вызове этой функции обязательно должен быть
    # прописан "event", так как она вызывается событием <<ComboboxSelected>>.
    code = combobox.get() # создана переменная, в которую при помощи функции get отправляется выбранный пользователем код валюты.
    name = cur[code] # создана переменная, берущая из словаря "cur" значение, соответствующее выбранному коду.
    c_label.config(text=name) # производится изменение метки в соответствии с содержимым переменной "name".


cur = { # создан словарь для выбора кода валюты в комбобоксе и расшифровки его значения на метке ниже.
    'RUB': 'Российский рубль',
    'EUR': 'Евро',
    'GBP': 'Британский фунт стерлингов',
    'JPY': 'Японская йена',
    'CNY': 'Китайский юань',
    'KZT': 'Казахский тенге',
    'UZS': 'Узбекский сум',
    'CHF': 'Швейцарский франк',
    'AED': 'Дирхам ОАЭ',
    'CAD': 'Канадский доллар'
}

window = Tk() # создано главное окно приложения.
window.title('Курсы обмена валют') # задан заголовок главного окна.
window.geometry('360x180') # заданы размеры главного окна.

Label(text='Выберите код валюты').pack(padx=10, pady=10) # создана метка с текстом, информирующем пользователя о требуемых действиях.
combobox = ttk.Combobox(values=list(cur.keys())) # создан выпадающий список из 10 самых популярных валют. Они подтягиваются из ключей списка "cur".
combobox.pack(padx=10, pady=10) # визуализация виджета и установка параметров горизонтального и вертикального отступов от края окна или другого виджета.
combobox.bind('<<ComboboxSelected>>', update_c_label) # создано событие, запускающее обновление метки с расшифровкой кода валюты при выборе значения
# из выпадающего списка.

c_label = ttk.Label() # создана метка для расшифровки выбранного из выпадающего списка кода валюты.
c_label.pack(padx=10, pady=10) # визуализация виджета и установка параметров горизонтального и вертикального отступов от края окна или другого виджета.

# entry = Entry() # создано поле для ввода запроса.
# entry.pack(padx=10, pady=10) # визуализация виджета и установка параметров горизонтального и вертикального отступов от края окна или другого виджета.

Button(text='Получить курс обмена к доллару', command=exchange).pack(padx=10, pady=10) # создана кнопка запуска основной функции программы.

window.mainloop() # запуск бесконечного цикла обработки событий.
